/* адаптив */

/* II Адаптируем ВТОРОЙ БЛОК (Тег <section> с классом "iphone") */
/* Установим брейк-поинт на ШИРИНЕ экрана в 1100px */
@media (max-width: 1100px){
  



  .iphone__inner{
    /* Свойство CSS flex-wrap задаёт правила вывода flex-элементов — в одну строку или в несколько, с переносом блоков. Если перенос разрешён, то возможно задать направление, в котором выводятся блоки. */
    flex-wrap: wrap;
  }
/* Устраним максимальное ограничение для ширины для iphone__text  */
  .iphone__text{
    max-width: 100%;
  }
  .iphone{
    padding: 0px 0 0px;
  }
  .iphone__link{
    margin-top: 20px;
  }
  .iphone__colum {
    margin-bottom: 30px;
  }
  /* Чтобы слайдер не выходил за границы видимости */
  .iphone__colum-slider{
    max-width: 100%;
    margin-left: 0;
  }




  /* III Адаптируем ТРЕТИЙ БЛОК (Тег <section> с классом "info") */
  .info__inner {
    flex-wrap: wrap-reverse;
  } 
  .info-img {
    /* display: none; */
     margin-top: 60px;
    flex-basis: 100%;
  }
  .info__list {
    /* Чтобы текст растянулся на всю ширину окна браузера */
    flex-basis: 100%;
  }
  .info__item + .info__item {
    padding-top: 25px;
  }

  /* IV Адаптируем IV ЧЕТВЕРТЫЙ блок Тег <section> с классом "characteristics" */
  .characteristics__inner {
    flex-wrap: wrap;  
  }
  .characteristics__items {
    flex-basis: 100%;
    margin-right: 0;
  }
  .characteristics__img {
    flex-basis: 100%;
  }
  .characteristics__list {
    margin: 0px;
  }
  /* Чтобы колонки characteristics__name и characteristics__descr отодвинуть друг от друга  */
  .characteristics__name {
    flex-basis: 50%;
  }
  .characteristics__descr {
    flex-basis: 50%;
  }
  .characteristics {
    /* margin-top: 50px; */
    padding-bottom: 50px; 
  }

  /* V Адаптируем V ПЯТЫЙ блок Тег <div> с классом "slider"- */
  /* Адаптируем картинки слайдера */
  .slider__img {
    object-fit: cover;
    height: 500px;  
  }
  .slider__item {
    padding-left: 180px;
  }

  /* Адаптируем  VI ШЕСТОЙ блок Тег <section> с классом "prise"  */
  /* При уменьшении окна браузера картинку с велосипедом и ценой опустим вниз и влеко */
  .form__iphone {
    top: 500px;
    /* left: 0px; */
    margin-left: 100px; 
  }
  .price {
    /* Увеличим расстояние между VI блоком и VII блоком чтобы между ними поместилась картинка */
    margin-bottom: 350px;
  
  }
}





/* I Адаптируем ПЕРВЫЙ БЛОК (Тег header с классом "header") */
/* Установим брейк-поинт на ШИРИНУ экрана в 1000рх */
/* Все CSS свойства внутри этого медиа-запросабудут будут подключены когда щирина экрана стане менее 1000px */
@media (max-width: 1000px){
  .menu {
    /* При уменьшении окна браузера менее 991px отступ у menu с права будет равен 0 */
    margin-right: 0; 
  } 

  .header__inner {
    padding-bottom: 50px;
  }
  
  /* V Адаптируем V ПЯТЫЙ блок Тег <div> с классом "slider" */
  /* Адаптируем картинки слайдера */
  .slider__img {
    /* Свойство object-fit определяет, как содержимое заменяемого элемента, такого как <img> или <video>, должно заполнять контейнер относительно его высоты и ширины. */
    /* Смещаемый контент меняет свой размер таким образом, чтобы сохранять свои пропорции при заполнении блока: окончательный размер контента будет определён как "покрытие" блока, ограничиваясь его шириной и высотой. */
    object-fit: cover;
    height: 450px;  
  }

  .slider__item {
    padding-left: 150px;
  }
}





/* Установим брейк-поинт на ШИРИНЕ экрана в 950рх */
@media (max-width: 950px){
  /* отменяем  display:flex: у header__inner и определяем display: block*/
  .header__inner {
    display: block;
    /* Выравниваем по вертикали ЛОГОЕИП */
    text-align: center;
  }
  .menu {
    /* При уменьшении окна браузера менее 950px у menu появится отступ сверху 50px */
    margin-top: 50px;
  }
  /* CSS свойство justify-content определяет, как браузер распределяет пространство между и вокруг элементов контента вдоль главной оси flex контейнера, или вдоль строчной оси grid контейнера. */
  /* space-evenly Элементы равномерно распределены внутри контейнера выравнивания вдоль главной оси. Интервал между каждой парой смежных элементов, краем основного начала и первым элементом, краем основного конца и последним элементом абсолютно одинаков. */
  .menu__list {
    justify-content: space-evenly;
  }
  /* анулируем падинги слева у элементов меню (чтобы они стали ближе друг к другу) */
  .menu__item + .menu__item{
    padding-left: 0px; 
  }
  /*  Уменьшим падинг для элементов menu__link  */
  .menu__link {
    padding: 25px 20px; 
  } 

  /* V Адаптируем V ПЯТЫЙ блок Тег <div> с классом "slider"- */
  /* Адаптируем картинки слайдера */
  .slider__img {
    /* Свойство object-fit определяет, как содержимое заменяемого элемента, такого как <img> или <video>, должно заполнять контейнер относительно его высоты и ширины. */
    /* Смещаемый контент меняет свой размер таким образом, чтобы сохранять свои пропорции при заполнении блока: окончательный размер контента будет определён как "покрытие" блока, ограничиваясь его шириной и высотой. */
    /* object-fit: cover; */
    height: 400px;  
  } 
  
  /* Адаптируем  VI ШЕСТОЙ блок Тег <section> с классом "prise"  */
  /* При уменьшении окна браузера картинку с велосипедом и ценой опустим вниз и влеко */
  .form__iphone {
    top: 500px;
    /* Чтобы цена не скрывалась за левой границей окна браузера */
    left: 0px; 
  }

  .slider__item {
    padding-left: 100px;
  }
}


/* II Адаптируем ВТОРОЙ БЛОК (Тег <section> с классом "bike") */
@media (max-width: 670px){
  .iphone__title{
    font-size: 44px;
    line-height: 57px;
    color: #131313;
    margin: 30px 0 5px;
  }
  .iphone__subtitle{
    margin: 0 0 20px;
    font-size: 22px;
    line-height: 29px;
  }
  .iphone__list{
    /* Свойство CSS flex-wrap задаёт правила вывода flex-элементов — в одну строку или в несколько, с переносом блоков.(флекс-элементы (поочереди (начиная с правого) будут опускаться вниз) Если перенос разрешён, то возможно задать направление, в котором выводятся блоки. */
    flex-wrap: wrap;
  }
  .iphone__list-item{
    /*Чтобы элементы равномерно выстраивались в ДВЕ а затем и в ОДНУ колонку  */
    width: 50%;
    margin-bottom: 20px;
  }
  /* Уменьшаем кнопку */
  .iphone__link {
    padding: 15px;
    letter-spacing: .9em;
  }

  /* Уменьшаем кнопку ЗАКАЗАТЬ в блоке VI */
  .form__btn {
    padding: 15px;
    letter-spacing: .9em;
  }

  .iphone__colum {
    /* Выравниваем по вертикали bike__link это кнопку ЗАКАЗАТЬ (а также bike__title bike__subtitle и bike__text) */
    text-align: center;   
  }

  /* V Адаптируем V ПЯТЫЙ блок Тег <div> с классом "slider"- */
  /* Адаптируем картинки слайдера */
  .slider__img {
    /* Свойство object-fit определяет, как содержимое заменяемого элемента, такого как <img> или <video>, должно заполнять контейнер относительно его высоты и ширины. */
    /* Смещаемый контент меняет свой размер таким образом, чтобы сохранять свои пропорции при заполнении блока: окончательный размер контента будет определён как "покрытие" блока, ограничиваясь его шириной и высотой. */
    /* object-fit: cover; */
    height: 300px;  
  }
  .slider__item {
    padding-left: 10px;
  }

  /* Адаптируем  VI ШЕСТОЙ блок Тег <section> с классом "prise"  */
  /* Уменьшим размер картинки .form__bike-img */
  .form__iphone-img {
    max-width: 450px;
  }

  .slider__item {
    padding-left: 130px;
  }
}

/* I Адаптируем ПЕРВЫЙ БЛОК (Тег header с классом "header") */
/* Установим брейк-поинт на ШИРИНУ экрана в 560px */
/* Все CSS свойства внутри этого медиа-запросабудут будут подключены когда щирина экрана стане менее 560px */
@media (max-width: 570px){
  /* CSS свойство justify-content определяет, как браузер распределяет пространство между и вокруг элементов контента вдоль главной оси flex контейнера, или вдоль строчной оси grid контейнера. */

  /* space-between — расстояния между соседними элементами одинаковые, между элементами и краями флекс-контейнера ОТСТУПОВ НЕТ. */
  .menu__list {
    justify-content: space-between;
  }
  /*  Уменьшим падинг для элементов menu__link  */
  .menu__link {
    padding: 25px 0px; 
  }

  /* V Адаптируем V ПЯТЫЙ блок Тег <div> с классом "slider"- */
  /* Адаптируем картинки слайдера */
  .slider__img {
    object-fit: cover;
    height: 250px;  
  }

  /* Адаптируем  VI ШЕСТОЙ блок Тег <section> с классом "prise"  */
  /* Уменьшим размер картинки .form__bike-img */
  .form__iphone-img {
    max-width: 350px;
  }

  /* Опустин указатель цены вниз на 280px  */
  .form__iphone-price {
    top: 280px;
  }

  .slider__item {
    padding-left: 100px;
  }

}





/* Установим брейк-поинт на ШИРИНУ экрана в 360px */
/* Все CSS свойства внутри этого медиа-запросабудут будут подключены когда щирина экрана стане менее 360px */
@media (max-width: 360px){
  .menu__link {
    font-size: 12px;
  }
  .menu {
    /* При уменьшении окна браузера менее 340px у menu появится отступ сверху 50px */
    margin-top: 20px;
  }

  /* V Адаптируем V ПЯТЫЙ блок Тег <div> с классом "slider"- */
  /* Адаптируем картинки слайдера */
  .slider__img {
    /* Свойство object-fit определяет, как содержимое заменяемого элемента, такого как <img> или <video>, должно заполнять контейнер относительно его высоты и ширины. */
    /* Смещаемый контент меняет свой размер таким образом, чтобы сохранять свои пропорции при заполнении блока: окончательный размер контента будет определён как "покрытие" блока, ограничиваясь его шириной и высотой. */
    object-fit: cover;
    height: 100px;  
  }

  /* Адаптируем  VI ШЕСТОЙ блок Тег <section> с классом "prise"  */
  /* Уменьшим размер картинки .form__bike-img */
  .form__iphone-img {
    max-width: 250px;
}

}